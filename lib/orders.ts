import Airtable from 'airtable';import {findPriceForSKU}from'@/lib/catalog';type RFQ={company:string;email:string;whatsapp:string;forwarder:string;forwarderAddr:string;forwarderContact:string;items:{sku:string;qty:number}[]};export default async function createOrderInAirtable(orderNo:string,rfq:RFQ){const baseId=process.env.AIRTABLE_BASE as string|undefined;const token=process.env.AIRTABLE_TOKEN as string|undefined;const ordersTable=process.env.AIRTABLE_ORDERS_TABLE||'Orders';const orderItemsTable=process.env.AIRTABLE_ORDER_ITEMS_TABLE||'Order Items';const productsTable=process.env.AIRTABLE_PRODUCTS_TABLE||'Products';if(!baseId||!token)return;const base=new Airtable({apiKey:token}).base(baseId);const order=await base(ordersTable).create({'Order #':orderNo,'Status':'Quote Sent','Incoterm':'FCA Miami','Company Name':rfq.company,'Buyer Contact':rfq.company,'Forwarder Name':rfq.forwarder,'Forwarder Address':rfq.forwarderAddr,'Forwarder Contact':rfq.forwarderContact});async function findProductIdBySKU(sku:string){const rec=await base(productsTable).select({maxRecords:1,filterByFormula:`{SKU} = '${sku.replace("'","\\'")}'`}).firstPage();return rec&&rec[0]?.id||null}for(const it of rfq.items){const productId=await findProductIdBySKU(String(it.sku));const unitPrice=await findPriceForSKU(String(it.sku));await base(orderItemsTable).create({'Order':[order.id],'Product':productId?[productId]:undefined,'SKU':it.sku,'Qty':it.qty,'Unit Price':unitPrice,'Line Total':unitPrice*it.qty} as any)}}